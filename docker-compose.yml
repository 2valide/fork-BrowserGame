services:
  nginx:
    image: nginx:latest
    container_name: browserquest-nginx
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - backend

  server1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: browserquest-server1
    ports:
      - "8001:8001"
    command: node server/js/main.js server/config_8001.json
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - backend

  server2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: browserquest-server2
    ports:
      - "8002:8002"
    command: node server/js/main.js server/config_8002.json
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - backend

  server3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: browserquest-server3
    ports:
      - "8003:8003"
    command: node server/js/main.js server/config_8003.json
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - backend

  server4:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: browserquest-server4
    ports:
      - "8004:8004"
    command: node server/js/main.js server/config_8004.json
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - backend

  server5:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: browserquest-server5
    ports:
      - "8005:8005"
    command: node server/js/main.js server/config_8005.json
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - backend

  client:
    image: nginx:alpine
    container_name: browserquest-client
    ports:
      - "5500:80"
    volumes:
      - .:/usr/share/nginx/html
    depends_on:
      - server1
    restart: unless-stopped
    networks:
      - backend

  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./fail2ban/data:/data
      - ./logs/nginx:/var/log/nginx:ro
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
